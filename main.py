# main.py
import os
import asyncio
import tempfile
import types

from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, FSInputFile, InputMediaPhoto
from aiogram.filters import Command
from platforms import PLATFORM_HANDLERS
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°—Ç–≤–æ—Ä–∏ .env —Ñ–∞–π–ª.")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

def get_handler(url: str):
    for domain, handler in PLATFORM_HANDLERS.items():
        if domain in url:
            return handler
    return None

@dp.message(Command("start"))
async def start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—ñ–¥–µ–æ –∞–±–æ —Ñ–æ—Ç–æ –∑:\n"
        "‚Ä¢ YouTube ‚Ä¢ TikTok ‚Ä¢ Instagram ‚Ä¢ Twitter (X)\n"
        "‚Ä¢ Pinterest ‚Ä¢ Likee\n\n"
        "üìå –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è!\n"
        "‚ÑπÔ∏è –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /help"
    )
# --- –ö–æ–º–∞–Ω–¥–∞ /help ---
@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = (
        "üìò <b>–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º:</b>\n\n"
        "1. –ó–Ω–∞–π–¥–∏ –ø–æ—Å—Ç –∑ —Ä–µ—Ü–µ–ø—Ç–æ–º, –º–∞–ª—é–Ω–∫–æ–º —á–∏ –≤—ñ–¥–µ–æ.\n"
        "2. –°–∫–æ–ø—ñ—é–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è (URL) –∑ Instagram, TikTok —Ç–æ—â–æ.\n"
        "3. –ù–∞–¥—ñ—à–ª–∏ –π–æ–≥–æ —Å—é–¥–∏.\n"
        "4. –ë–æ—Ç –∑–∞–ø—Ä–æ–ø–æ–Ω—É—î –≤–∏–±—Ä–∞—Ç–∏ —è–∫—ñ—Å—Ç—å –∞–±–æ —Ñ–æ—Ä–º–∞—Ç.\n"
        "5. –û—Ç—Ä–∏–º–∞–π —Ñ–∞–π–ª –±–µ–∑ –≤–æ–¥—è–Ω–∏—Ö –∑–Ω–∞–∫—ñ–≤! ‚úÖ\n\n"
        "<b>–ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏:</b>\n"
        "‚Ä¢ TikTok ‚Äî –≤—ñ–¥–µ–æ –±–µ–∑ –ª–æ–≥–æ—Ç–∏–ø—É\n"
        "‚Ä¢ Instagram ‚Äî —Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ (Reels, –ø–æ—Å—Ç–∏)\n"
        "‚Ä¢ YouTube ‚Äî –±—É–¥—å-—è–∫–∞ —è–∫—ñ—Å—Ç—å\n"
        "‚Ä¢ Twitter (X), Pinterest, Likee ‚Äî –≤—ñ–¥–µ–æ/—Ñ–æ—Ç–æ\n\n"
        "<i>‚ö†Ô∏è –í—ñ–¥–µ–æ –º–∞—î –±—É—Ç–∏ –º–µ–Ω—à–µ 50 –ú–ë (–æ–±–º–µ–∂–µ–Ω–Ω—è Telegram).</i>"
    )
    await message.answer(help_text, parse_mode="HTML")

# --- –ö–æ–º–∞–Ω–¥–∞ /lang ---
@dp.message(Command("lang"))
async def cmd_lang(message: types.Message):
    await message.answer(
        "üá∫üá¶ –ú–æ–≤–∞ –±–æ—Ç–∞: —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞\n"
        "üá¨üáß Bot language: Ukrainian\n"
        "üá∫üáø Botning tili: Ukrain"
    )

@dp.message(F.text)
async def handle_url(message: Message):
    url = message.text.strip()
    if not url.startswith(("http://", "https://")):
        await message.answer("–ù–∞–¥—ñ—à–ª—ñ—Ç—å –¥—ñ–π—Å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.")
        return

    handler = get_handler(url)
    if not handler:
        await message.answer("‚ùå –¶—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è.")
        return

    await message.answer("–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é... ‚è≥")

    with tempfile.TemporaryDirectory() as temp_dir:
        try:
            result = await asyncio.to_thread(handler, url, temp_dir)

            for video in result["videos"]:
                await message.answer_video(FSInputFile(video))

            for audio in result["audios"]:
                await message.answer_audio(FSInputFile(audio))

            photos = result["photos"]
            if len(photos) == 1:
                await message.answer_photo(FSInputFile(photos[0]))
            elif len(photos) > 1:
                media = [InputMediaPhoto(media=FSInputFile(p)) for p in photos[:10]]
                await message.answer_media_group(media)

            if not any(result.values()):
                await message.answer("‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

        except Exception as e:
            await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)[:300]}")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())