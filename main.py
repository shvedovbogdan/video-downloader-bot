# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.
import os
import asyncio
import logging
from email import message
from fileinput import filename

from aiogram.types import FSInputFile
from aiogram import Bot, Dispatcher, F, Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import yt_dlp
from dotenv import load_dotenv



# === –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
DOWNLOADS_DIR = os.getenv("DOWNLOADS_DIR", "downloads")  # "downloads" ‚Äî –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
os.makedirs(DOWNLOADS_DIR, exist_ok=True)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# --- /start ---
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ –∞–±–æ –ø–æ—Å—Ç –∑:\n"
        "‚Ä¢ TikTok ‚Ä¢ Instagram ‚Ä¢ YouTube ‚Ä¢ Twitter (X)\n"
        "‚Ä¢ Pinterest ‚Ä¢ Likee\n\n"
        "–Ø –∑–∞–≤–∞–Ω—Ç–∞–∂—É –π–æ–≥–æ –±–µ–∑ –≤–æ–¥—è–Ω–∏—Ö –∑–Ω–∞–∫—ñ–≤ (–¥–µ —Ü–µ –º–æ–∂–ª–∏–≤–æ)!"
    )

# --- /help ---
@dp.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer(
        "üìò <b>–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è:</b>\n\n"
        "1. –ó–Ω–∞–π–¥–∏ –≤—ñ–¥–µ–æ –∑ —Ä–µ—Ü–µ–ø—Ç–æ–º, –º–∞–ª—é–Ω–∫–æ–º —á–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é.\n"
        "2. –°–∫–æ–ø—ñ—é–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è (–Ω–∞—Ç–∏—Å–Ω–∏ ¬´–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è¬ª ‚Üí ¬´–ö–æ–ø—ñ—é–≤–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è¬ª).\n"
        "3. –ù–∞–¥—ñ—à–ª–∏ –π–æ–≥–æ —Å—é–¥–∏.\n"
        "4. –û—Ç—Ä–∏–º–∞–π —Ñ–∞–π–ª –±–µ–∑ –ª–æ–≥–æ—Ç–∏–ø—É!\n\n"
        "<i>‚ö†Ô∏è –í—ñ–¥–µ–æ –º–∞—î –±—É—Ç–∏ –º–µ–Ω—à–µ 50 –ú–ë (–æ–±–º–µ–∂–µ–Ω–Ω—è Telegram).</i>",
        parse_mode="HTML"
    )

# --- /lang ---
@dp.message(Command("lang"))
async def cmd_lang(message: Message):
    await message.answer(
        "üá∫üá¶ –ú–æ–≤–∞ –±–æ—Ç–∞: —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞\n"
        "üá¨üáß Bot language: Ukrainian\n"
        "üá∫üáø Botning tili: Ukrain"
    )

# --- –û–±—Ä–æ–±–∫–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è ---
@dp.message(F.text)
async def handle_url(message: Message):
    url = message.text.strip()
    if not url.startswith(("http://", "https://")):
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª–∏ –¥—ñ–π—Å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è (–∑ https://).")
        return

    await message.answer("–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é... ‚è≥")

    filename = os.path.join(DOWNLOADS_DIR, "video.mp4")

    ydl_opts = {
        'format': 'best[height<=1080][filesize<50M]/best',  # –¥–æ 1080p —ñ <50 –ú–ë
        'outtmpl': filename,
        'noplaylist': True,
        'merge_output_format': 'mp4',
        'quiet': True,
        'no_warnings': True,
    }

    try:
        import yt_dlp
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([url])

        if os.path.exists(filename):
            video = FSInputFile(filename)
            await message.answer_video(video)
            os.remove(filename)
        else:
            await message.answer("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π —Ñ–∞–π–ª.")

    except Exception as e:
        if os.path.exists(filename):
            os.remove(filename)
        error_msg = str(e)
        if "Video unavailable" in error_msg:
            await message.answer("‚ùå –í—ñ–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ –∞–±–æ –ø—Ä–∏–≤–∞—Ç–Ω–µ.")
        elif "This video is not available" in error_msg:
            await message.answer("‚ùå –¶–µ –≤—ñ–¥–µ–æ –Ω–µ –º–æ–∂–Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ (–º–æ–∂–ª–∏–≤–æ, –ø—Ä–∏–≤–∞—Ç–Ω–µ).")
        else:
            await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {error_msg[:300]}")

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())